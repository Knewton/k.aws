#!/usr/bin/env python
import os
import logging
import sys
import boto
import k.aws.config
import k.aws.s3
import k.stdlib.logging.config
from boto import exception
from boto.s3.connection import S3Connection
from boto.s3.key import Key
from optparse import OptionParser

def list_buckets(conn):
	buckets = conn.get_all_buckets()
	for bucket in buckets:
		print bucket.name

def main():
	parser = optionParser()
	(options, args) = parser.parse_args()
	k.stdlib.logging.config.configure_logging(options)

	try:
		creds = k.aws.config.get_keys(options)
		conn = k.aws.s3.connect(creds, ordinary=options.ordinary)
		list_buckets(conn)
	except boto.exception.BotoServerError, e:
		sys.stderr.write(e.message)
		sys.exit(1)

def optionParser():
	usage = "usage: %prog [options]\n\n"
	usage += "Lists the account's s3 buckets"

	parser = OptionParser(usage=usage)
	k.stdlib.logging.config.get_logging_options(parser)
	k.aws.config.get_aws_options(parser)
	k.aws.s3.get_s3_region_options(parser)
	return parser

if __name__=='__main__':
	main()

# Local Variables:
# tab-width: 4
# indent-tabs-mode: t
# End:
